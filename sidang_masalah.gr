sidang(Masalah, fn () {
    tentang("inisialisasi", fn () {
        tentang("saat menggunakan #baru()", fn () {
            ia("bisa dibuat tanpa pesan", fn () {
                ada msl = Masalah.baru()
                tuntut msl itu Masalah
                tuntut msl.pesan() == ""
            })

            ia("bisa dibuat dengan pesan", fn () {
                ada msl = MasalahKode.baru("ada kesalahan dalam kode")

                tuntut msl itu MasalahKode
                tuntut msl itu Masalah

                tuntut msl.pesan() == "ada kesalahan dalam kode"
            })
        })

        tentang("saat menggunakan #picu()", fn () {
            ia("bisa dibuat tanpa pesan", fn () {
                tuntut Masalah() itu Masalah
                tuntut MasalahRangkap() itu MasalahRangkap
            })

            ia("bisa dibuat dengan pesan", fn () {
                ada m = Masalah("berpesan")
                tuntut m.pesan == "berpesan"
                tuntut m itu Masalah

                m = MasalahRangkap("merangkap")
                tuntut m.pesan == "merangkap"
                tuntut m itu MasalahRangkap
            })
        })
    })

    tentang(".jejak()", fn () {
        ia("mencetak jejak eksekusi dalam metode yang bermasalah", fn () {
            tidakAda!(fn () { A })

            kelas A {
                fn err() { tuntut salah }
            }

            tuntut coba {
                A.baru().err()
                salah
            } tahan (e) {
                tuntut e.jejak().panjang() > 0
                benar
            } == benar
        })
    })

    ia(".pesan=(arg) menyetel isi pesan masalah", fn () {
        ada msl = Masalah.baru("bermasalah")
        tuntut msl.pesan() == "bermasalah"

        msl.pesan = "tetap bermasalah"
        tuntut msl.pesan() == "tetap bermasalah"
    })

    tentang(".rincian()", fn () {
        ia("mengutus `nil` jika `pesan()` dan `jejak()` kosong", fn () {
            ada m = Masalah.baru()

            tuntut m.pesan().kosong?()
            tuntut m.jejak().kosong?()

            tuntut m.rincian() == nil
        })

        ia("mengutus pesan jika hanya `pesan()` yang bernilai", fn () {
            ada m = Masalah.baru("masalah")

            tuntut m.pesan() != nil
            tuntut m.jejak().kosong?()

            tuntut m.rincian() == "Masalah: masalah"
        })

        ia("mengutus jejak jika ada", fn () {
            ada bermasalah = fn () { 1 + nil }
            ada m

            coba { bermasalah() } tahan (e) { m = e }

            tuntut m.rincian().berisi?("Jejak pemanggilan")
            tuntut !m.pesan().kosong?()
        })
    })
})
