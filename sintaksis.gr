$m.sidang("Sintaksis", fn () {
    tentang("yang mengakibatkan MasalahKode", fn () {
        // tunggu sampai punya fungsi eval
        xuji("kasus 1", fn () {
            // ada a = fn() {}
            // a: 1: 2
        })
    })

    tentang("pemanggilan fungsi", fn () {
        tentang("ketika fungsi", fn () {
            uji("bisa dipanggil", fn () {
                ada a = fn () {}
                fn b () {}

                tuntut a() == nil
                tuntut b() == nil
            })
        })

        tentang("ketika Kata, akan menjadi masalah", fn () {
            tuntut coba {
                "2"()
                salah
            } tahan (e) {
                tuntut e itu MasalahEksekusi
                tuntut e.pesan() == "bukan fungsi: 2"
            }
        })

        tentang("ketika Angka, akan menjadi masalah", fn () {
            tuntut coba {
                2()
                salah
            } tahan (e) {
                tuntut e itu MasalahEksekusi
                tuntut e.pesan() == "bukan fungsi: 2"
            }
        })

        tentang("ketika nil", fn () {
            tuntut coba {
                nil()
                salah
            } tahan (e) {
                tuntut e itu MasalahEksekusi
                tuntut e.pesan() == "bukan fungsi: nil"
            }
        })

        tentang("ketika objek", fn () {
            kelas A {}

            tuntut coba {
                ada a = A.baru()
                a()
                salah
            } tahan (e) {
                tuntut e itu MasalahEksekusi
                tuntut e.pesan() == "bukan fungsi: a"
            }
        })
    })

    tentang("sintaksis `:`", fn () {
        uji("bisa digunakan sebagai pemisah tuntutan dan pesan", fn () {
            tuntut fn () {} itu Fungsi: "fungsi!"

            tuntut coba {
                tuntut [] itu Fungsi: "salah"
                salah
            } tahan (e) {
                tuntut e.pesan() == "salah"
                benar
            } == benar

            tuntut coba {
                tuntut salah: "salah"
                salah
            } tahan (e) {
                tuntut e.pesan() == "salah"
                benar
            } == benar
        })

        tentang("dengan `:` satu lagi sebagai namespace", fn () {
            tentang("penggunaan sebagai pengenal kelas", fn () {
                uji("harus diulang dua kali", fn () {
                    tuntut coba {
                        A::B
                        salah
                    } tahan (e) {
                        tuntut e itu MasalahKode == salah
                        benar
                    } == benar
                })

                xuji("tidak boleh mengambang", fn () {
                    // A::
                    // kelas A:: {}
                })

                xuji("tidak boleh berdiri sendiri", fn () {
                    tuntut coba {
                        // A:B eval
                        salah
                    } tahan (e) {
                        tuntut e itu MasalahKode
                        tuntut e.pesan() == "x"
                        benar
                    } == benar
                })

                xuji("tidak boleh diulang sebanyak lebih dari 2 kali", fn () {
                    // A:::
                    // A::::B
                })
            })

            uji("tidak diperkenankan penggunaan sebagai pengenal variabel", fn () {
                // ada a::b
            })
        })
    })
})
